{"version":3,"file":"health-DML2iGzm.js","sources":["../../server/routes/health.ts"],"sourcesContent":["import type { RequestHandler } from \"express\";\nimport { getDb } from \"../lib/mongo\";\n\nexport const handleHealth: RequestHandler = async (_req, res) => {\n  const result: {\n    ok: boolean;\n    services: {\n      mongo: { configured: boolean; connected: boolean; error?: string };\n      smtp: { configured: boolean };\n      sms: { configured: boolean };\n      env: { nodeEnv: string | undefined };\n    };\n  } = {\n    ok: true,\n    services: {\n      mongo: {\n        configured: !!(process.env.MONGODB_URI && process.env.MONGODB_DB),\n        connected: false,\n      },\n      smtp: {\n        configured: !!(\n          process.env.SMTP_HOST &&\n          process.env.SMTP_PORT &&\n          process.env.SMTP_USER &&\n          process.env.SMTP_PASS &&\n          process.env.EMAIL_FROM &&\n          process.env.EMAIL_TO\n        ),\n      },\n      sms: {\n        configured: !!(\n          process.env.TWILIO_ACCOUNT_SID &&\n          process.env.TWILIO_AUTH_TOKEN &&\n          process.env.TWILIO_FROM_NUMBER &&\n          process.env.SMS_TO\n        ),\n      },\n      env: { nodeEnv: process.env.NODE_ENV },\n    },\n  };\n\n  // Try MongoDB connection if configured\n  if (result.services.mongo.configured) {\n    try {\n      const db = await getDb();\n      await db.command({ ping: 1 });\n      result.services.mongo.connected = true;\n    } catch (e: any) {\n      result.services.mongo.connected = false;\n      result.services.mongo.error = e?.message || \"connection failed\";\n      result.ok = false;\n    }\n  }\n\n  res.json(result);\n};\n"],"names":[],"mappings":";AAGO,MAAM,eAA+B,OAAO,MAAM,QAAQ;AAC/D,QAAM,SAQF;AAAA,IACF,IAAI;AAAA,IACJ,UAAU;AAAA,MACR,OAAO;AAAA,QACL,YAAY,CAAC,EAAE,QAAQ,IAAI,eAAe,QAAQ,IAAI;AAAA,QACtD,WAAW;AAAA,MAAA;AAAA,MAEb,MAAM;AAAA,QACJ,YAAY,CAAC,EACX,QAAQ,IAAI,aACZ,QAAQ,IAAI,aACZ,QAAQ,IAAI,aACZ,QAAQ,IAAI,aACZ,QAAQ,IAAI,cACZ,QAAQ,IAAI;AAAA,MAAA;AAAA,MAGhB,KAAK;AAAA,QACH,YAAY,CAAC,EACX,QAAQ,IAAI,sBACZ,QAAQ,IAAI,qBACZ,QAAQ,IAAI,sBACZ,QAAQ,IAAI;AAAA,MAAA;AAAA,MAGhB,KAAK,EAAE,SAAS,aAAA;AAAA,IAAqB;AAAA,EACvC;AAIF,MAAI,OAAO,SAAS,MAAM,YAAY;AACpC,QAAI;AACF,YAAM,KAAK,MAAM,MAAA;AACjB,YAAM,GAAG,QAAQ,EAAE,MAAM,GAAG;AAC5B,aAAO,SAAS,MAAM,YAAY;AAAA,IACpC,SAAS,GAAQ;AACf,aAAO,SAAS,MAAM,YAAY;AAClC,aAAO,SAAS,MAAM,QAAQ,GAAG,WAAW;AAC5C,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAEA,MAAI,KAAK,MAAM;AACjB;"}